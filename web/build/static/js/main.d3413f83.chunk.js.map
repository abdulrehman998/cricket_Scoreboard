{"version":3,"sources":["server.js","img/vs.png","components/Scoreboard/index.jsx","components/profile/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["baseUrl","window","location","hostname","split","Scoreboard","useState","score","setScore","useEffect","axios","get","then","res","console","log","data","socket","io","on","message","close","style","margin","Stack","spacing","direction","Card","sx","maxWidth","backgroundColor","CardHeader","avatar","Avatar","src","alt","width","title","tournament","subheader","CardContent","textAlign","Typography","variant","color","team1","img","team2","wontoss","toss","innings","bat","runs","wickets","batter1","batter1runs","batter1balls","batter2","batter2runs","batter2balls","overs","bowler","bowlerwickets","bowlerruns","bowlerovers","target","CardActions","disableSpacing","Dashboard","bowl","Box","flexGrow","Grid","container","item","md","xs","TextField","fullWidth","id","label","value","onChange","e","prev","type","Button","onClick","post","App","history","useHistory","Navbar","className","expand","Container","Brand","href","Toggle","Collapse","Nav","Link","push","exact","path","component","to","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yQACaA,EAAqD,cAA3CC,OAAOC,SAASC,SAASC,MAAM,KAAK,GAD/C,wBAC0E,G,wECDvE,MAA0B,+B,OCgH1BC,MA9Ff,WACI,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAgCA,OA7BAC,qBAAU,WACNC,IAAMC,IAAN,UAAaX,EAAb,kBACKY,MAAK,SAACC,GACHC,QAAQC,IAAI,YAAaF,EAAIG,MAC7BR,EAASK,EAAIG,KAAK,SAE3B,IAGHP,qBAAU,WACN,IAAMQ,EAASC,YAAG,4CAalB,OAXAD,EAAOE,GAAG,WAAW,WACjBL,QAAQC,IAAI,0BAEhBE,EAAOE,GAAG,cAAc,SAAUC,GAC9BN,QAAQC,IAAI,6BAA8BK,MAE9CH,EAAOE,GAAG,SAAS,SAAUH,GACzBF,QAAQC,IAAIC,GACZR,EAASQ,MAGN,WACHC,EAAOI,WAEZ,IAIC,sBAAKC,MAAO,CAAEC,OAAQ,QAAtB,UAEA,+CACA,cAACC,EAAA,EAAD,CAAOC,QAAS,EAAGC,UAAU,SAA7B,SACA,eAACC,EAAA,EAAD,CAAMC,GAAI,CAAEC,SAAU,KAAMC,gBAAiB,WAA7C,UACI,cAACC,EAAA,EAAD,CACIC,OACI,cAACC,EAAA,EAAD,CAAQ,aAAW,SAAnB,SACI,qBAAKC,IAAI,yFAAyFC,IAAI,GAAGC,MAAM,SAGvHC,MAAO9B,EAAM+B,WACbC,UAAU,eAId,eAACC,EAAA,EAAD,CAAalB,MAAO,CAAEmB,UAAW,UAAjC,UACI,eAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,MAAM,iBAA/B,iBACKrC,QADL,IACKA,OADL,EACKA,EAAOsC,MADZ,MACqB,qBACbvB,MAAO,CAAEc,MAAO,IAChBF,IAAKY,EACLX,IAAI,KAJZ,WAKQ5B,QALR,IAKQA,OALR,EAKQA,EAAOwC,SAEf,eAACL,EAAA,EAAD,CAAYC,QAAQ,KAAKC,MAAM,iBAA/B,iBACKrC,QADL,IACKA,OADL,EACKA,EAAOyC,QADZ,sCACiDzC,QADjD,IACiDA,OADjD,EACiDA,EAAO0C,QAExD,cAACP,EAAA,EAAD,CAAYC,QAAQ,KAAKC,MAAM,iBAA/B,gBACKrC,QADL,IACKA,OADL,EACKA,EAAO2C,UAEZ,eAACR,EAAA,EAAD,CAAYC,QAAQ,KAApB,iBACKpC,QADL,IACKA,OADL,EACKA,EAAO4C,IADZ,WACkB5C,QADlB,IACkBA,OADlB,EACkBA,EAAO6C,KADzB,YACiC7C,QADjC,IACiCA,OADjC,EACiCA,EAAO8C,WAExC,eAACX,EAAA,EAAD,CAAYC,QAAQ,KAAKC,MAAM,iBAA/B,iBACKrC,QADL,IACKA,OADL,EACKA,EAAO+C,QADZ,YACuB/C,QADvB,IACuBA,OADvB,EACuBA,EAAOgD,YAD9B,aAC8ChD,QAD9C,IAC8CA,OAD9C,EAC8CA,EAAOiD,aADrD,aACsEjD,QADtE,IACsEA,OADtE,EACsEA,EAAOkD,QAD7E,YACwFlD,QADxF,IACwFA,OADxF,EACwFA,EAAOmD,YAD/F,YAC8GnD,QAD9G,IAC8GA,OAD9G,EAC8GA,EAAOoD,aADrH,OAGA,eAACjB,EAAA,EAAD,CAAYC,QAAQ,KAApB,iBACKpC,QADL,IACKA,OADL,EACKA,EAAOqD,MADZ,YAGA,eAAClB,EAAA,EAAD,CAAYC,QAAQ,KAAKC,MAAM,iBAA/B,iBACKrC,QADL,IACKA,OADL,EACKA,EAAOsD,OADZ,WACqBtD,QADrB,IACqBA,OADrB,EACqBA,EAAOuD,cAD5B,WAC4CvD,QAD5C,IAC4CA,OAD5C,EAC4CA,EAAOwD,WADnD,YACiExD,QADjE,IACiEA,OADjE,EACiEA,EAAOyD,YADxE,OAGA,eAACtB,EAAA,EAAD,CAAYC,QAAQ,KAAKC,MAAM,iBAA/B,oDACqCrC,QADrC,IACqCA,OADrC,EACqCA,EAAO0D,aAGhD,cAACC,EAAA,EAAD,CAAaC,gBAAc,a,2CCoexBC,MA5jBf,WAEI,MAA0B9D,mBAAS,CAC/BgC,WAAY,GACZY,QAAS,GACTL,MAAO,GACPE,MAAO,GACPI,IAAK,GACLG,QAAS,GACTC,YAAa,GACbC,aAAc,GACdC,QAAS,GACTC,YAAa,GACbC,aAAc,GACdU,KAAM,GACNR,OAAQ,GACRE,WAAY,GACZD,cAAe,GACfE,YAAa,GACbX,QAAS,GACTO,MAAO,GACPR,KAAM,GACNH,KAAM,GACND,QAAS,GACTiB,OAAQ,KAtBZ,mBAAO1D,EAAP,KAAcC,EAAd,KA0CA,OAjBAC,qBAAU,WACNC,IAAMC,IAAN,UAAaX,EAAb,kBACKY,MAAK,SAACC,GACHC,QAAQC,IAAI,YAAaF,EAAIG,MAC7BR,EAASK,EAAIG,KAAK,SAE3B,IAYC,mCACI,sBAAKM,MAAO,CAAEC,OAAQ,QAAtB,UAEI,iDAEA,cAAC+C,EAAA,EAAD,CAAK1C,GAAI,CAAE2C,SAAU,GAArB,SACI,eAACC,EAAA,EAAD,CAAMC,WAAS,EAAChD,QAAS,EAAzB,UACI,cAAC+C,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IAGf,cAACH,EAAA,EAAD,CAAME,MAAI,EAACE,GAAI,GAAID,GAAI,EAAvB,SAEI,cAACE,EAAA,EAAD,CACIC,WAAS,EACTlC,MAAM,UACNmC,GAAG,iBACHC,MAAM,aACNrC,QAAQ,WACRsC,MAAO1E,EAAM+B,WACb4C,SAAU,SAACC,GACP3E,GAAS,SAAC4E,GACN,OAAO,2BAAKA,GAAZ,IAAkB9C,WAAY6C,EAAElB,OAAOgB,gBAKvD,cAACT,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IAGf,cAACH,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IAGf,cAACH,EAAA,EAAD,CAAME,MAAI,EAACE,GAAI,GAAID,GAAI,EAAvB,SAEI,cAACE,EAAA,EAAD,CACIC,WAAS,EACTlC,MAAM,UACNmC,GAAG,iBACHC,MAAM,UACNrC,QAAQ,WACRsC,MAAO1E,EAAM2C,QACbgC,SAAU,SAACC,GACP3E,GAAS,SAAC4E,GACN,OAAO,2BAAKA,GAAZ,IAAkBlC,QAASiC,EAAElB,OAAOgB,gBAKpD,cAACT,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IAGf,cAACH,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IAGf,cAACH,EAAA,EAAD,CAAME,MAAI,EAACE,GAAI,GAAID,GAAI,EAAvB,SAEI,cAACE,EAAA,EAAD,CACIC,WAAS,EACTlC,MAAM,UACNmC,GAAG,iBACHC,MAAM,SACNrC,QAAQ,WACRsC,MAAO1E,EAAMsC,MACbqC,SAAU,SAACC,GACP3E,GAAS,SAAC4E,GACN,OAAO,2BAAKA,GAAZ,IAAkBvC,MAAOsC,EAAElB,OAAOgB,gBAKlD,cAACT,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IAGf,cAACH,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IAGf,cAACH,EAAA,EAAD,CAAME,MAAI,EAACE,GAAI,GAAID,GAAI,EAAvB,SACI,cAACE,EAAA,EAAD,CACIC,WAAS,EACTlC,MAAM,UACNmC,GAAG,iBACHC,MAAM,SACNrC,QAAQ,WACRsC,MAAO1E,EAAMwC,MACbmC,SAAU,SAACC,GACP3E,GAAS,SAAC4E,GACN,OAAO,2BAAKA,GAAZ,IAAkBrC,MAAOoC,EAAElB,OAAOgB,gBAMlD,cAACT,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IAIf,cAACH,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IAGf,cAACH,EAAA,EAAD,CAAME,MAAI,EAACE,GAAI,GAAID,GAAI,EAAvB,SACI,cAACE,EAAA,EAAD,CACIC,WAAS,EACTlC,MAAM,UACNmC,GAAG,iBACHC,MAAM,OACNK,KAAK,SACL1C,QAAQ,WACRsC,MAAO1E,EAAM6C,KACb8B,SAAU,SAACC,GACP3E,GAAS,SAAC4E,GACN,OAAO,2BAAKA,GAAZ,IAAkBhC,KAAM+B,EAAElB,OAAOgB,gBAMjD,cAACT,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IAGf,cAACH,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IAGf,cAACH,EAAA,EAAD,CAAME,MAAI,EAACE,GAAI,GAAID,GAAI,EAAvB,SACI,cAACE,EAAA,EAAD,CACIC,WAAS,EACTlC,MAAM,UACNmC,GAAG,iBACHC,MAAM,UACNK,KAAK,SACL1C,QAAQ,WACRsC,MAAO1E,EAAM8C,QACb6B,SAAU,SAACC,GACP3E,GAAS,SAAC4E,GACN,OAAO,2BAAKA,GAAZ,IAAkB/B,QAAS8B,EAAElB,OAAOgB,gBAMpD,cAACT,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IAGf,cAACH,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IAGf,cAACH,EAAA,EAAD,CAAME,MAAI,EAACE,GAAI,GAAID,GAAI,EAAvB,SACI,cAACE,EAAA,EAAD,CACIC,WAAS,EACTlC,MAAM,UACNmC,GAAG,iBACHC,MAAM,QACNK,KAAK,SACL1C,QAAQ,WACRsC,MAAO1E,EAAMqD,MACbsB,SAAU,SAACC,GACP3E,GAAS,SAAC4E,GACN,OAAO,2BAAKA,GAAZ,IAAkBxB,MAAOuB,EAAElB,OAAOgB,gBAMlD,cAACT,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IAGf,cAACH,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IAGf,cAACH,EAAA,EAAD,CAAME,MAAI,EAACE,GAAI,GAAID,GAAI,EAAvB,SACI,cAACE,EAAA,EAAD,CACIC,WAAS,EACTlC,MAAM,UACNmC,GAAG,iBACHC,MAAM,eACNrC,QAAQ,WACRsC,MAAO1E,EAAM4C,IACb+B,SAAU,SAACC,GACP3E,GAAS,SAAC4E,GACN,OAAO,2BAAKA,GAAZ,IAAkBjC,IAAKgC,EAAElB,OAAOgB,gBAMhD,cAACT,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IAGf,cAACH,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IAGf,cAACH,EAAA,EAAD,CAAME,MAAI,EAACE,GAAI,GAAID,GAAI,EAAvB,SACI,cAACE,EAAA,EAAD,CACIC,WAAS,EACTlC,MAAM,UACNmC,GAAG,iBACHC,MAAM,eACNrC,QAAQ,WACRsC,MAAO1E,EAAM8D,KACba,SAAU,SAACC,GACP3E,GAAS,SAAC4E,GACN,OAAO,2BAAKA,GAAZ,IAAkBf,KAAMc,EAAElB,OAAOgB,gBAMjD,cAACT,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IAGf,cAACH,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IAGf,cAACH,EAAA,EAAD,CAAME,MAAI,EAACE,GAAI,GAAID,GAAI,EAAvB,SACI,cAACE,EAAA,EAAD,CACIC,WAAS,EACTlC,MAAM,UACNmC,GAAG,iBACHC,MAAM,SACNrC,QAAQ,WACRsC,MAAO1E,EAAMsD,OACbqB,SAAU,SAACC,GACP3E,GAAS,SAAC4E,GACN,OAAO,2BAAKA,GAAZ,IAAkBvB,OAAQsB,EAAElB,OAAOgB,gBAMnD,cAACT,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IAGf,cAACH,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IAGf,cAACH,EAAA,EAAD,CAAME,MAAI,EAACE,GAAI,GAAID,GAAI,EAAvB,SACI,cAACE,EAAA,EAAD,CACIC,WAAS,EACTlC,MAAM,UACNmC,GAAG,iBACHC,MAAM,WACNrC,QAAQ,WACRsC,MAAO1E,EAAM+C,QACb4B,SAAU,SAACC,GACP3E,GAAS,SAAC4E,GACN,OAAO,2BAAKA,GAAZ,IAAkB9B,QAAS6B,EAAElB,OAAOgB,gBAMpD,cAACT,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IAGf,cAACH,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IAGf,cAACH,EAAA,EAAD,CAAME,MAAI,EAACE,GAAI,GAAID,GAAI,EAAvB,SACI,cAACE,EAAA,EAAD,CACIC,WAAS,EACTlC,MAAM,UACNmC,GAAG,iBACHM,KAAK,SACLL,MAAM,gBACNrC,QAAQ,WACRsC,MAAO1E,EAAMgD,YACb2B,SAAU,SAACC,GACP3E,GAAS,SAAC4E,GACN,OAAO,2BAAKA,GAAZ,IAAkB7B,YAAa4B,EAAElB,OAAOgB,gBAMxD,cAACT,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IAGf,cAACH,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IAGf,cAACH,EAAA,EAAD,CAAME,MAAI,EAACE,GAAI,GAAID,GAAI,EAAvB,SACI,cAACE,EAAA,EAAD,CACIC,WAAS,EACTlC,MAAM,UACNmC,GAAG,iBACHC,MAAM,iBACNK,KAAK,SACL1C,QAAQ,WACRsC,MAAO1E,EAAMiD,aACb0B,SAAU,SAACC,GACP3E,GAAS,SAAC4E,GACN,OAAO,2BAAKA,GAAZ,IAAkB5B,aAAc2B,EAAElB,OAAOgB,gBAMzD,cAACT,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IAGf,cAACH,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IAGf,cAACH,EAAA,EAAD,CAAME,MAAI,EAACE,GAAI,GAAID,GAAI,EAAvB,SACI,cAACE,EAAA,EAAD,CACIC,WAAS,EACTlC,MAAM,UACNmC,GAAG,iBACHC,MAAM,WACNrC,QAAQ,WACRsC,MAAO1E,EAAMkD,QACbyB,SAAU,SAACC,GACP3E,GAAS,SAAC4E,GACN,OAAO,2BAAKA,GAAZ,IAAkB3B,QAAS0B,EAAElB,OAAOgB,gBAMpD,cAACT,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IAGf,cAACH,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IAGf,cAACH,EAAA,EAAD,CAAME,MAAI,EAACE,GAAI,GAAID,GAAI,EAAvB,SACI,cAACE,EAAA,EAAD,CACIC,WAAS,EACTlC,MAAM,UACNmC,GAAG,iBACHM,KAAK,SACLL,MAAM,gBACNrC,QAAQ,WACRsC,MAAO1E,EAAMmD,YACbwB,SAAU,SAACC,GACP3E,GAAS,SAAC4E,GACN,OAAO,2BAAKA,GAAZ,IAAkB1B,YAAayB,EAAElB,OAAOgB,gBAMxD,cAACT,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IAIf,cAACH,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IAGf,cAACH,EAAA,EAAD,CAAME,MAAI,EAACE,GAAI,GAAID,GAAI,EAAvB,SACI,cAACE,EAAA,EAAD,CACIC,WAAS,EACTlC,MAAM,UACNmC,GAAG,iBACHM,KAAK,SACLL,MAAM,iBACNrC,QAAQ,WACRsC,MAAO1E,EAAMoD,aACbuB,SAAU,SAACC,GACP3E,GAAS,SAAC4E,GACN,OAAO,2BAAKA,GAAZ,IAAkBzB,aAAcwB,EAAElB,OAAOgB,gBAMzD,cAACT,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IAGf,cAACH,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IAGf,cAACH,EAAA,EAAD,CAAME,MAAI,EAACE,GAAI,GAAID,GAAI,EAAvB,SACI,cAACE,EAAA,EAAD,CACIC,WAAS,EACTlC,MAAM,UACNmC,GAAG,iBACHM,KAAK,SACLL,MAAM,gBACNrC,QAAQ,WACRsC,MAAO1E,EAAMwD,WACbmB,SAAU,SAACC,GACP3E,GAAS,SAAC4E,GACN,OAAO,2BAAKA,GAAZ,IAAkBrB,WAAYoB,EAAElB,OAAOgB,gBAMvD,cAACT,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IAGf,cAACH,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IAGf,cAACH,EAAA,EAAD,CAAME,MAAI,EAACE,GAAI,GAAID,GAAI,EAAvB,SACI,cAACE,EAAA,EAAD,CACIC,WAAS,EACTlC,MAAM,UACNmC,GAAG,iBACHM,KAAK,SACLL,MAAM,kBACNrC,QAAQ,WACRsC,MAAO1E,EAAMuD,cACboB,SAAU,SAACC,GACP3E,GAAS,SAAC4E,GACN,OAAO,2BAAKA,GAAZ,IAAkBtB,cAAeqB,EAAElB,OAAOgB,gBAM1D,cAACT,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IAGf,cAACH,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IAGf,cAACH,EAAA,EAAD,CAAME,MAAI,EAACE,GAAI,GAAID,GAAI,EAAvB,SACI,cAACE,EAAA,EAAD,CACIC,WAAS,EACTlC,MAAM,UACNmC,GAAG,iBACHM,KAAK,SACLL,MAAM,iBACNrC,QAAQ,WACRsC,MAAO1E,EAAMyD,YACbkB,SAAU,SAACC,GACP3E,GAAS,SAAC4E,GACN,OAAO,2BAAKA,GAAZ,IAAkBpB,YAAamB,EAAElB,OAAOgB,gBAMxD,cAACT,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IAIf,cAACH,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IAGf,cAACH,EAAA,EAAD,CAAME,MAAI,EAACE,GAAI,GAAID,GAAI,EAAvB,SACI,cAACE,EAAA,EAAD,CACIC,WAAS,EACTlC,MAAM,UACNmC,GAAG,iBACHC,MAAM,SACNrC,QAAQ,WACRsC,MAAO1E,EAAM0D,OACbiB,SAAU,SAACC,GACP3E,GAAS,SAAC4E,GACN,OAAO,2BAAKA,GAAZ,IAAkBnB,OAAQkB,EAAElB,OAAOgB,gBAMnD,cAACT,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IAIf,cAACH,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IAGf,cAACH,EAAA,EAAD,CAAME,MAAI,EAACE,GAAI,GAAID,GAAI,EAAvB,SACI,cAACE,EAAA,EAAD,CACIC,WAAS,EACTlC,MAAM,UACNmC,GAAG,iBACHC,MAAM,gBACNrC,QAAQ,WACRsC,MAAO1E,EAAMyC,QACbkC,SAAU,SAACC,GACP3E,GAAS,SAAC4E,GACN,OAAO,2BAAKA,GAAZ,IAAkBpC,QAASmC,EAAElB,OAAOgB,gBAMpD,cAACT,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IAIf,cAACH,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IAGf,cAACH,EAAA,EAAD,CAAME,MAAI,EAACE,GAAI,GAAID,GAAI,EAAvB,SACI,cAACE,EAAA,EAAD,CACIC,WAAS,EACTlC,MAAM,UACNmC,GAAG,iBACHC,MAAM,OACNrC,QAAQ,WACRsC,MAAO1E,EAAM0C,KACbiC,SAAU,SAACC,GACP3E,GAAS,SAAC4E,GACN,OAAO,2BAAKA,GAAZ,IAAkBnC,KAAMkC,EAAElB,OAAOgB,gBAMjD,cAACT,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IAGf,cAACH,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IAGf,cAACH,EAAA,EAAD,CAAME,MAAI,EAACE,GAAI,GAAID,GAAI,EAAvB,SACI,cAACW,EAAA,EAAD,CAAQR,WAAS,EAACnC,QAAQ,YAAY4C,QAxgB/C,WACX7E,IAAM8E,KAAN,UAAcxF,EAAd,iBAAsCO,GACjCK,MAAK,SAACC,GACHC,QAAQC,IAAI,QAASF,EAAIG,UAqgBb,oBAEJ,cAACwD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,eC7fxBc,MAxCf,WAEE,IAAIC,EAAUC,cAEd,OACE,qCAGE,cAACC,EAAA,EAAD,CAAQC,UAAU,WAAWC,OAAO,KAApC,SACA,eAACC,EAAA,EAAD,WACI,cAACH,EAAA,EAAOI,MAAR,CAAcC,KAAK,QAAnB,iCACA,cAACL,EAAA,EAAOM,OAAR,CAAe,gBAAc,qBAC7B,cAACN,EAAA,EAAOO,SAAR,CAAiBpB,GAAG,mBAApB,SACE,eAACqB,EAAA,EAAD,CAAKP,UAAU,UAAf,UACE,cAACO,EAAA,EAAIC,KAAL,CAAUd,QAAS,WAAQG,EAAQY,KAAK,MAAxC,yBACA,cAACF,EAAA,EAAIC,KAAL,CAAUd,QAAS,WAAQG,EAAQY,KAAK,gBAAxC,mCAWN,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWrC,IACjC,cAAC,IAAD,CAAOoC,KAAK,cAAcC,UAAWpG,IAErC,cAAC,IAAD,CAAUqG,GAAG,aCpCRC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBjG,MAAK,YAAkD,IAA/CkG,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,QCIdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACI,cAAC,IAAD,UACE,cAAC,EAAD,QAGNC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.d3413f83.chunk.js","sourcesContent":["const dev = \"http://localhost:5001\"\r\nexport const baseUrl = window.location.hostname.split(\":\")[0] === \"localhost\" ? dev : \"\";","export default __webpack_public_path__ + \"static/media/vs.7419083b.png\";","import * as React from 'react';\r\nimport axios from 'axios';\r\nimport { useState, useEffect } from \"react\"\r\nimport { baseUrl } from \"./../../server\"\r\nimport io from 'socket.io-client';\r\nimport Card from '@mui/material/Card';\r\nimport Stack from '@mui/material/Stack';\r\nimport Grid from '@mui/material/Grid';\r\nimport CardHeader from '@mui/material/CardHeader';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Typography from '@mui/material/Typography';\r\nimport img from './../../img/vs.png'\r\n\r\n\r\n\r\n\r\nfunction Scoreboard() {\r\n    const [score, setScore] = useState({})\r\n\r\n\r\n    useEffect(() => {\r\n        axios.get(`${baseUrl}/api/v1/score`)\r\n            .then((res) => {\r\n                console.log(\"res +++: \", res.data);\r\n                setScore(res.data[0])\r\n            })\r\n    }, [])\r\n\r\n\r\n    useEffect(() => {\r\n        const socket = io(\"https://cricketscoreboard.herokuapp.com/\"); // to connect with locally running Socker.io server\r\n\r\n        socket.on('connect', function () {\r\n            console.log(\"connected to server\")\r\n        });\r\n        socket.on('disconnect', function (message) {\r\n            console.log(\"disconnected from server: \", message);\r\n        });\r\n        socket.on('SCORE', function (data) {\r\n            console.log(data);\r\n            setScore(data)\r\n        });\r\n\r\n        return () => {\r\n            socket.close();\r\n        };\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <div style={{ margin: \"1rem\" }}>\r\n\r\n        <h1> Score Board </h1>\r\n        <Stack spacing={2} direction=\"column\">\r\n        <Card sx={{ maxWidth: 1600, backgroundColor: \"#F0F2F5\" }}>\r\n            <CardHeader\r\n                avatar={\r\n                    <Avatar aria-label=\"recipe\">\r\n                        <img src=\"https://upload.wikimedia.org/wikipedia/en/1/10/ICC_Men%27s_T20_World_Cup_2021_logo.svg\" alt=\"\" width=\"30\" />\r\n                    </Avatar>\r\n                }\r\n                title={score.tournament}\r\n                subheader=\"Live Match\"\r\n                \r\n                />\r\n\r\n            <CardContent style={{ textAlign: \"center\" }}>\r\n                <Typography variant=\"h2\" color=\"text.secondary\">\r\n                    {score?.team1}   <img\r\n                        style={{ width: 85 }}\r\n                        src={img}\r\n                        alt=\"\"\r\n                    /> {score?.team2}\r\n                </Typography>\r\n                <Typography variant=\"h6\" color=\"text.secondary\">\r\n                    {score?.wontoss} won the Toss and choose to {score?.toss}\r\n                </Typography>\r\n                <Typography variant=\"h6\" color=\"text.secondary\">\r\n                    {score?.innings} \r\n                </Typography>\r\n                <Typography variant=\"h4\">\r\n                    {score?.bat} {score?.runs}/ {score?.wickets}\r\n                </Typography>\r\n                <Typography variant=\"h6\" color=\"text.secondary\">\r\n                    {score?.batter1}: {score?.batter1runs}* ({score?.batter1balls})  {score?.batter2}: {score?.batter2runs} ({score?.batter2balls})\r\n                </Typography>\r\n                <Typography variant=\"h5\">\r\n                    {score?.overs} Overs\r\n                </Typography>\r\n                <Typography variant=\"h6\" color=\"text.secondary\">\r\n                    {score?.bowler} {score?.bowlerwickets}/{score?.bowlerruns} ({score?.bowlerovers})\r\n                </Typography>\r\n                <Typography variant=\"h5\" color=\"text.secondary\">\r\n                    Target given by the Opponent is {score?.target} \r\n                </Typography>\r\n            </CardContent>\r\n            <CardActions disableSpacing>\r\n            </CardActions>\r\n\r\n        </Card>\r\n\r\n        </Stack>\r\n\r\n\r\n</div>\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default Scoreboard;\r\n\r\n\r\n","import axios from 'axios';\r\nimport { useState, useEffect } from \"react\"\r\nimport { baseUrl } from \"./../../server\"\r\nimport Button from '@mui/material/Button';\r\nimport TextField from '@mui/material/TextField';\r\nimport Box from '@mui/material/Box';\r\nimport Grid from '@mui/material/Grid';\r\n\r\n\r\n\r\nfunction Dashboard() {\r\n\r\n    const [score, setScore] = useState({\r\n        tournament: \"\",\r\n        innings: \"\",\r\n        team1: \"\",\r\n        team2: \"\",\r\n        bat: \"\",\r\n        batter1: \"\",\r\n        batter1runs: \"\",\r\n        batter1balls: \"\",\r\n        batter2: \"\",\r\n        batter2runs: \"\",\r\n        batter2balls: \"\",\r\n        bowl: \"\",\r\n        bowler: \"\",\r\n        bowlerruns: \"\",\r\n        bowlerwickets: \"\",\r\n        bowlerovers: \"\",\r\n        wickets: \"\",\r\n        overs: \"\",\r\n        runs: \"\",\r\n        toss: \"\",\r\n        wontoss: \"\",\r\n        target: \"\",\r\n    });\r\n\r\n    useEffect(() => {\r\n        axios.get(`${baseUrl}/api/v1/score`)\r\n            .then((res) => {\r\n                console.log(\"res +++: \", res.data);\r\n                setScore(res.data[0])\r\n            })\r\n    }, [])\r\n\r\n    const submit = () => {\r\n        axios.post(`${baseUrl}/api/v1/score`, score)\r\n            .then((res) => {\r\n                console.log(\"res: \", res.data);\r\n\r\n            })\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <div style={{ margin: \"1rem\" }}>\r\n\r\n                <h1> Admin Control </h1>\r\n\r\n                <Box sx={{ flexGrow: 1 }}>\r\n                    <Grid container spacing={3}>\r\n                        <Grid item md={1}>\r\n\r\n                        </Grid>\r\n                        <Grid item xs={12} md={2} >\r\n\r\n                            <TextField\r\n                                fullWidth\r\n                                color=\"primary\"\r\n                                id=\"outlined-basic\"\r\n                                label=\"Tournamnet\"\r\n                                variant=\"standard\"\r\n                                value={score.tournament}\r\n                                onChange={(e) => {\r\n                                    setScore((prev) => {\r\n                                        return { ...prev, tournament: e.target.value }\r\n                                    })\r\n                                }}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item md={1}>\r\n\r\n                        </Grid>\r\n                        <Grid item md={1}>\r\n\r\n                        </Grid>\r\n                        <Grid item xs={12} md={2} >\r\n\r\n                            <TextField\r\n                                fullWidth\r\n                                color=\"primary\"\r\n                                id=\"outlined-basic\"\r\n                                label=\"Innings\"\r\n                                variant=\"standard\"\r\n                                value={score.innings}\r\n                                onChange={(e) => {\r\n                                    setScore((prev) => {\r\n                                        return { ...prev, innings: e.target.value }\r\n                                    })\r\n                                }}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item md={1}>\r\n\r\n                        </Grid>\r\n                        <Grid item md={1}>\r\n\r\n                        </Grid>\r\n                        <Grid item xs={12} md={2} >\r\n\r\n                            <TextField\r\n                                fullWidth\r\n                                color=\"primary\"\r\n                                id=\"outlined-basic\"\r\n                                label=\"Team A\"\r\n                                variant=\"standard\"\r\n                                value={score.team1}\r\n                                onChange={(e) => {\r\n                                    setScore((prev) => {\r\n                                        return { ...prev, team1: e.target.value }\r\n                                    })\r\n                                }}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item md={1}>\r\n\r\n                        </Grid>\r\n                        <Grid item md={1}>\r\n\r\n                        </Grid>\r\n                        <Grid item xs={12} md={2} >\r\n                            <TextField\r\n                                fullWidth\r\n                                color=\"primary\"\r\n                                id=\"outlined-basic\"\r\n                                label=\"Team B\"\r\n                                variant=\"standard\"\r\n                                value={score.team2}\r\n                                onChange={(e) => {\r\n                                    setScore((prev) => {\r\n                                        return { ...prev, team2: e.target.value }\r\n                                    })\r\n                                }}\r\n\r\n                            />\r\n                        </Grid>\r\n                        <Grid item md={1}>\r\n\r\n                        </Grid>\r\n\r\n                        <Grid item md={1}>\r\n\r\n                        </Grid>\r\n                        <Grid item xs={12} md={2} >\r\n                            <TextField\r\n                                fullWidth\r\n                                color=\"primary\"\r\n                                id=\"outlined-basic\"\r\n                                label=\"Runs\"\r\n                                type=\"number\"\r\n                                variant=\"standard\"\r\n                                value={score.runs}\r\n                                onChange={(e) => {\r\n                                    setScore((prev) => {\r\n                                        return { ...prev, runs: e.target.value }\r\n                                    })\r\n                                }}\r\n\r\n                            />\r\n                        </Grid>\r\n                        <Grid item md={1}>\r\n\r\n                        </Grid>\r\n                        <Grid item md={1}>\r\n\r\n                        </Grid>\r\n                        <Grid item xs={12} md={2} >\r\n                            <TextField\r\n                                fullWidth\r\n                                color=\"primary\"\r\n                                id=\"outlined-basic\"\r\n                                label=\"Wickets\"\r\n                                type=\"number\"\r\n                                variant=\"standard\"\r\n                                value={score.wickets}\r\n                                onChange={(e) => {\r\n                                    setScore((prev) => {\r\n                                        return { ...prev, wickets: e.target.value }\r\n                                    })\r\n                                }}\r\n\r\n                            />\r\n                        </Grid>\r\n                        <Grid item md={1}>\r\n\r\n                        </Grid>\r\n                        <Grid item md={1}>\r\n\r\n                        </Grid>\r\n                        <Grid item xs={12} md={2} >\r\n                            <TextField\r\n                                fullWidth\r\n                                color=\"primary\"\r\n                                id=\"outlined-basic\"\r\n                                label=\"Overs\"\r\n                                type=\"number\"\r\n                                variant=\"standard\"\r\n                                value={score.overs}\r\n                                onChange={(e) => {\r\n                                    setScore((prev) => {\r\n                                        return { ...prev, overs: e.target.value }\r\n                                    })\r\n                                }}\r\n\r\n                            />\r\n                        </Grid>\r\n                        <Grid item md={1}>\r\n\r\n                        </Grid>\r\n                        <Grid item md={1}>\r\n\r\n                        </Grid>\r\n                        <Grid item xs={12} md={2} >\r\n                            <TextField\r\n                                fullWidth\r\n                                color=\"primary\"\r\n                                id=\"outlined-basic\"\r\n                                label=\"Batting Team\"\r\n                                variant=\"standard\"\r\n                                value={score.bat}\r\n                                onChange={(e) => {\r\n                                    setScore((prev) => {\r\n                                        return { ...prev, bat: e.target.value }\r\n                                    })\r\n                                }}\r\n\r\n                            />\r\n                        </Grid>\r\n                        <Grid item md={1}>\r\n\r\n                        </Grid>\r\n                        <Grid item md={1}>\r\n\r\n                        </Grid>\r\n                        <Grid item xs={12} md={2} >\r\n                            <TextField\r\n                                fullWidth\r\n                                color=\"primary\"\r\n                                id=\"outlined-basic\"\r\n                                label=\"Bowling Team\"\r\n                                variant=\"standard\"\r\n                                value={score.bowl}\r\n                                onChange={(e) => {\r\n                                    setScore((prev) => {\r\n                                        return { ...prev, bowl: e.target.value }\r\n                                    })\r\n                                }}\r\n\r\n                            />\r\n                        </Grid>\r\n                        <Grid item md={1}>\r\n\r\n                        </Grid>\r\n                        <Grid item md={1}>\r\n\r\n                        </Grid>\r\n                        <Grid item xs={12} md={2} >\r\n                            <TextField\r\n                                fullWidth\r\n                                color=\"primary\"\r\n                                id=\"outlined-basic\"\r\n                                label=\"Bowler\"\r\n                                variant=\"standard\"\r\n                                value={score.bowler}\r\n                                onChange={(e) => {\r\n                                    setScore((prev) => {\r\n                                        return { ...prev, bowler: e.target.value }\r\n                                    })\r\n                                }}\r\n\r\n                            />\r\n                        </Grid>\r\n                        <Grid item md={1}>\r\n\r\n                        </Grid>\r\n                        <Grid item md={1}>\r\n\r\n                        </Grid>\r\n                        <Grid item xs={12} md={2} >\r\n                            <TextField\r\n                                fullWidth\r\n                                color=\"primary\"\r\n                                id=\"outlined-basic\"\r\n                                label=\"Batter 1\"\r\n                                variant=\"standard\"\r\n                                value={score.batter1}\r\n                                onChange={(e) => {\r\n                                    setScore((prev) => {\r\n                                        return { ...prev, batter1: e.target.value }\r\n                                    })\r\n                                }}\r\n\r\n                            />\r\n                        </Grid>\r\n                        <Grid item md={1}>\r\n\r\n                        </Grid>\r\n                        <Grid item md={1}>\r\n\r\n                        </Grid>\r\n                        <Grid item xs={12} md={2} >\r\n                            <TextField\r\n                                fullWidth\r\n                                color=\"primary\"\r\n                                id=\"outlined-basic\"\r\n                                type=\"number\"\r\n                                label=\"Batter 1 Runs\"\r\n                                variant=\"standard\"\r\n                                value={score.batter1runs}\r\n                                onChange={(e) => {\r\n                                    setScore((prev) => {\r\n                                        return { ...prev, batter1runs: e.target.value }\r\n                                    })\r\n                                }}\r\n\r\n                            />\r\n                        </Grid>\r\n                        <Grid item md={1}>\r\n\r\n                        </Grid>\r\n                        <Grid item md={1}>\r\n\r\n                        </Grid>\r\n                        <Grid item xs={12} md={2} >\r\n                            <TextField\r\n                                fullWidth\r\n                                color=\"primary\"\r\n                                id=\"outlined-basic\"\r\n                                label=\"Batter 1 Balls\"\r\n                                type=\"number\"\r\n                                variant=\"standard\"\r\n                                value={score.batter1balls}\r\n                                onChange={(e) => {\r\n                                    setScore((prev) => {\r\n                                        return { ...prev, batter1balls: e.target.value }\r\n                                    })\r\n                                }}\r\n\r\n                            />\r\n                        </Grid>\r\n                        <Grid item md={1}>\r\n\r\n                        </Grid>\r\n                        <Grid item md={1}>\r\n\r\n                        </Grid>\r\n                        <Grid item xs={12} md={2} >\r\n                            <TextField\r\n                                fullWidth\r\n                                color=\"primary\"\r\n                                id=\"outlined-basic\"\r\n                                label=\"Batter 2\"\r\n                                variant=\"standard\"\r\n                                value={score.batter2}\r\n                                onChange={(e) => {\r\n                                    setScore((prev) => {\r\n                                        return { ...prev, batter2: e.target.value }\r\n                                    })\r\n                                }}\r\n\r\n                            />\r\n                        </Grid>\r\n                        <Grid item md={1}>\r\n\r\n                        </Grid>\r\n                        <Grid item md={1}>\r\n\r\n                        </Grid>\r\n                        <Grid item xs={12} md={2} >\r\n                            <TextField\r\n                                fullWidth\r\n                                color=\"primary\"\r\n                                id=\"outlined-basic\"\r\n                                type=\"number\"\r\n                                label=\"Batter 2 Runs\"\r\n                                variant=\"standard\"\r\n                                value={score.batter2runs}\r\n                                onChange={(e) => {\r\n                                    setScore((prev) => {\r\n                                        return { ...prev, batter2runs: e.target.value }\r\n                                    })\r\n                                }}\r\n\r\n                            />\r\n                        </Grid>\r\n                        <Grid item md={1}>\r\n\r\n                        </Grid>\r\n\r\n                        <Grid item md={1}>\r\n\r\n                        </Grid>\r\n                        <Grid item xs={12} md={2} >\r\n                            <TextField\r\n                                fullWidth\r\n                                color=\"primary\"\r\n                                id=\"outlined-basic\"\r\n                                type=\"number\"\r\n                                label=\"Batter 2 Balls\"\r\n                                variant=\"standard\"\r\n                                value={score.batter2balls}\r\n                                onChange={(e) => {\r\n                                    setScore((prev) => {\r\n                                        return { ...prev, batter2balls: e.target.value }\r\n                                    })\r\n                                }}\r\n\r\n                            />\r\n                        </Grid>\r\n                        <Grid item md={1}>\r\n\r\n                        </Grid>\r\n                        <Grid item md={1}>\r\n\r\n                        </Grid>\r\n                        <Grid item xs={12} md={2} >\r\n                            <TextField\r\n                                fullWidth\r\n                                color=\"primary\"\r\n                                id=\"outlined-basic\"\r\n                                type=\"number\"\r\n                                label=\"Bowler's Runs\"\r\n                                variant=\"standard\"\r\n                                value={score.bowlerruns}\r\n                                onChange={(e) => {\r\n                                    setScore((prev) => {\r\n                                        return { ...prev, bowlerruns: e.target.value }\r\n                                    })\r\n                                }}\r\n\r\n                            />\r\n                        </Grid>\r\n                        <Grid item md={1}>\r\n\r\n                        </Grid>\r\n                        <Grid item md={1}>\r\n\r\n                        </Grid>\r\n                        <Grid item xs={12} md={2} >\r\n                            <TextField\r\n                                fullWidth\r\n                                color=\"primary\"\r\n                                id=\"outlined-basic\"\r\n                                type=\"number\"\r\n                                label=\"Bowler's Wicket\"\r\n                                variant=\"standard\"\r\n                                value={score.bowlerwickets}\r\n                                onChange={(e) => {\r\n                                    setScore((prev) => {\r\n                                        return { ...prev, bowlerwickets: e.target.value }\r\n                                    })\r\n                                }}\r\n\r\n                            />\r\n                        </Grid>\r\n                        <Grid item md={1}>\r\n\r\n                        </Grid>\r\n                        <Grid item md={1}>\r\n\r\n                        </Grid>\r\n                        <Grid item xs={12} md={2} >\r\n                            <TextField\r\n                                fullWidth\r\n                                color=\"primary\"\r\n                                id=\"outlined-basic\"\r\n                                type=\"number\"\r\n                                label=\"Bowler's Overs\"\r\n                                variant=\"standard\"\r\n                                value={score.bowlerovers}\r\n                                onChange={(e) => {\r\n                                    setScore((prev) => {\r\n                                        return { ...prev, bowlerovers: e.target.value }\r\n                                    })\r\n                                }}\r\n\r\n                            />\r\n                        </Grid>\r\n                        <Grid item md={1}>\r\n\r\n                        </Grid>\r\n\r\n                        <Grid item md={1}>\r\n\r\n                        </Grid>\r\n                        <Grid item xs={12} md={2} >\r\n                            <TextField\r\n                                fullWidth\r\n                                color=\"primary\"\r\n                                id=\"outlined-basic\"\r\n                                label=\"Target\"\r\n                                variant=\"standard\"\r\n                                value={score.target}\r\n                                onChange={(e) => {\r\n                                    setScore((prev) => {\r\n                                        return { ...prev, target: e.target.value }\r\n                                    })\r\n                                }}\r\n\r\n                            />\r\n                        </Grid>\r\n                        <Grid item md={1}>\r\n\r\n                        </Grid>\r\n\r\n                        <Grid item md={1}>\r\n\r\n                        </Grid>\r\n                        <Grid item xs={12} md={2} >\r\n                            <TextField\r\n                                fullWidth\r\n                                color=\"primary\"\r\n                                id=\"outlined-basic\"\r\n                                label=\"Team Won Toss\"\r\n                                variant=\"standard\"\r\n                                value={score.wontoss}\r\n                                onChange={(e) => {\r\n                                    setScore((prev) => {\r\n                                        return { ...prev, wontoss: e.target.value }\r\n                                    })\r\n                                }}\r\n\r\n                            />\r\n                        </Grid>\r\n                        <Grid item md={1}>\r\n\r\n                        </Grid>\r\n\r\n                        <Grid item md={1}>\r\n\r\n                        </Grid>\r\n                        <Grid item xs={12} md={2} >\r\n                            <TextField\r\n                                fullWidth\r\n                                color=\"primary\"\r\n                                id=\"outlined-basic\"\r\n                                label=\"Toss\"\r\n                                variant=\"standard\"\r\n                                value={score.toss}\r\n                                onChange={(e) => {\r\n                                    setScore((prev) => {\r\n                                        return { ...prev, toss: e.target.value }\r\n                                    })\r\n                                }}\r\n\r\n                            />\r\n                        </Grid>\r\n                        <Grid item md={1}>\r\n\r\n                        </Grid>\r\n                        <Grid item md={1}>\r\n\r\n                        </Grid>\r\n                        <Grid item xs={12} md={2} >\r\n                            <Button fullWidth variant=\"contained\" onClick={submit}>Post</Button>\r\n                        </Grid>\r\n                        <Grid item md={1}>\r\n\r\n                        </Grid>\r\n\r\n                    </Grid>\r\n                </Box>\r\n\r\n\r\n\r\n            </div>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Dashboard;","import './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useHistory,\n  Redirect\n} from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Button, Navbar, Container, Nav, NavDropdown } from 'react-bootstrap';\n\n\nimport Scoreboard from \"./components/Scoreboard/index\"\nimport Dashboard from \"./components/profile/index\"\n\n\n\nfunction App() {\n\n  let history = useHistory();\n\n  return (\n    <>\n\n    \n      <Navbar className=\"bgcolor1\" expand=\"lg\">\n      <Container>\n          <Navbar.Brand href=\"#home\">React Login project</Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"me-auto\">\n              <Nav.Link onClick={() => { history.push(\"/\") }}>Admin Panel</Nav.Link>\n              <Nav.Link onClick={() => { history.push(\"/scoreboard\") }}>Score Board</Nav.Link>\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n\n      \n\n\n\n\n        <Switch>\n          <Route exact path=\"/\" component={Dashboard} />\n          <Route path=\"/scoreboard\" component={Scoreboard} />\n\n          <Redirect to=\"/\" />\n        </Switch>\n      \n\n\n\n    </>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {\n  BrowserRouter as Router\n} from \"react-router-dom\";\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n      <Router>\n        <App />\n      </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}